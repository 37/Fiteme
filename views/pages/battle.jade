extends ../partials/skeleton

block prescript
	script(type='text/javascript').
		var playerPos;
		var gameState;
		var turnCounter = 1;

		function propogateTurn(count, turn){
			var counter = document.getElementById('battleCount');
			var icons = $(counter).children('li');

			// looping for turn indexing icons
			for (i=0; i < (count + 1); i++) {
				if (i == count) {
					$(icons[i]).removeClass();
					$(icons[i]).addClass('active');
				} else {
					if ($(icons[i]).hasClass('active')){
						$('#battleInputs textarea').slideUp( "300");
						$($('#battleInputs').children('textarea')[i]).delay(400).slideDown( "300");
					}
					$(icons[i]).removeClass();
					$(icons[i]).addClass('complete');
				}
			}

			// Call to enable or disable submission interface.
			enableDisableTurn(turn)

			// Increment turn counter
			turnCounter++;
		}

		function enableDisableTurn(turn) {
			// Freeze interface on off-turn

			//TODO: finish.
			if(turn == 'start') {
				$('#searchingScreen').slideUp( "300");
			}

			if (playerPos == turn || (turn == 'start' && playerPos == '2') || turnCounter >= 4) {
				if (turnCounter >= 4) {
					$('#battleSubmit input').attr('placeholder', "GG EZY.    Click to go judge SUM1 -->");
				} else {
					$('#battleSubmit input').attr('placeholder', "It ain't your turn m9.");
				}

				$('#battleSubmit input').prop('disabled', true);
				$('#battleSubmit button').prop('disabled', true);
			} else {
				$('#battleSubmit input').attr('placeholder', "Time to rek em!");
				$('#battleSubmit input').prop('disabled', false);
				$('#battleSubmit button').prop('disabled', false);
			}
		}

		function fade_out(element) {
			$(element).css('color', '#333');
			$(element).delay(5000).animate({
				color: 'transparent'
			}, 5000).delay(800);
		}

		$(document).ready(function() {
			setInterval(function(){
				switch($('#dotloader').attr('data-value')){
					case '1':
						$('#dotloader').text('..');
						$('#dotloader').attr('data-value', '2');
						break;
					case '2':
						$('#dotloader').text('...');
						$('#dotloader').attr('data-value', '3');
						break;
					case '3':
						$('#dotloader').text('....');
						$('#dotloader').attr('data-value', '4');
						break;
					case '4':
						$('#dotloader').text('');
						$('#dotloader').attr('data-value', '0');
						break;
					default:
						$('#dotloader').text('.');
						$('#dotloader').attr('data-value', '1');
						break;
				}
			}, 1000);


			$('#battleCount').on('click', '.complete', function() {
				if (!$(this).hasClass('open')) {
					var icon = $(this);
					var inputContainer = $('#battleInputs');
					var inputs = $(inputContainer).children('textarea');
					var index = icon.attr('data-count');
					$('#battleInputs textarea').slideUp( "300");
					$(inputs[index]).delay(400).slideDown( "300");
				}
			});
		});

block content

	if user
		div(id="searchingScreen")
			h1 Searching for a worthy opponent
				div(id="dotloader", data-value="0")
			img
		div(id="postScreen")
			h1 GG, that was intense..
			img
		div(id="battleScreen")
			H1 The argument title will go here, get ready!
			div(id="battleContent")
				ol(id='battleCount')
					li(data-count='1', class="active") P1
					li(data-count='2') P2
					li(data-count='3') P1
					li(data-count='4') P2
				form(id="battleInputs")
				ul(id='messages')
			form(id='battleSubmit')
				input(id="m", autocomplete="off")
				button Send

	else
		.container
			h1  Wanna fite m8?
				p Log in first.
				p
					a.btn.btn-primary(href="/login") Login
				p
					span.small I don't have an account?
					span &nbsp;
					a.small(href="/register") Get 1337.

block scripts
	script(type='text/javascript', src='/socket.io/socket.io.js')
	script(type='text/javascript').
		var socket = io();
		$('form').submit(function(){
			socket.emit('message', '!{givenName}', playerPos, $('#m').val());
			$('#m').val('');
			return false;
		});
		socket.on('message', function(from, position, msg){
			$('#battleInputs').append($('<textarea style= "display: none;" name="p' + position + '" readonly>').text(msg));
			propogateTurn(turnCounter, position);
		});
		socket.on('status', function(status, position, msg){
			if(position && !playerPos) {
				playerPos = position;
				console.log('player position: ' + playerPos + '.');
			}
			if(status) {
				gameState = status;
				console.log('gamestate: ' + gameState + '.');
				if (gameState = 'start'){
					enableDisableTurn(gameState);
				}
			}
			$('#messages').text(msg);
			fade_out('#messages');
		});
